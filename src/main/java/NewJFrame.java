
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GridLayout;
import java.awt.Panel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFormattedTextField;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author kirill
 */
public class NewJFrame extends javax.swing.JFrame {
    
    
    int T = 100;
    int d = 0;
    
            
        
        
        Circle one1= new Circle();
        Circle one2 = new Circle();
        Circle one3 = new Circle();
        Circle one4 = new Circle();
        Circle one5 = new Circle();
        Circle one6 = new Circle();
        Circle one7 = new Circle();
        Circle one8 = new Circle();
        Circle one9= new Circle();
        Circle one10 = new Circle();
        Circle one11 = new Circle();
        Circle one12 = new Circle();
        Circle one13 = new Circle();
        Circle one14 = new Circle();
        Circle one15 = new Circle();
        Circle one16 = new Circle();
    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jSlider1 = new javax.swing.JSlider();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Brounovskoe");

        jButton1.setText("Проверить");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Введите температуру");

        jSlider1.setMaximum(5000);
        jSlider1.setMinimum(100);

        jTextPane1.setEditable(false);
        jScrollPane1.setViewportView(jTextPane1);

        jButton2.setText("Не нажимать!");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(34, 34, 34)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    TestFrame fs = new TestFrame();
    JFrame dd = new JFrame();
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        try {
            Thread.sleep(100);
            
            
        } catch (InterruptedException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        Te.setDelay(1);
        Te.start();
        
        dd.setBounds(0,0,500,350);
        dd.setSize(500, 350);
        dd.add(fs);
        dd.setVisible(true);
        dd.setBackground(Color.white);
        dd.setEnabled(true);
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed
    int l;
    String s = "Я устал это делать @Grevtcov Kirill ";
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        tef.start();
         
    }//GEN-LAST:event_jButton2ActionPerformed
    Thread tef = new Thread() {
        public void run() {
            
           
            String s1 = s+" ";
            while(true){
            

            s = s1.substring(1)+s.charAt(0);
            s1 =s;
                try { 
                    tef.sleep(200);
                } catch (InterruptedException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            jTextField1.setText(s);
            
            }

      
        }  
    };
    
    
    Timer Te= new Timer((int) 0.01, new ActionListener()
    {public void actionPerformed(ActionEvent e)
    {
        
    
        
        
        
        one1.chekX();one1.chekY();
        one2.chekX();one2.chekY();
        one3.chekX();one3.chekY();
        one4.chekX();one4.chekY();
        one5.chekX();one5.chekY();
        one6.chekX();one6.chekY();
        one7.chekX();one7.chekY();
        one8.chekX();one8.chekY();
                                
        one9.chekX();one9.chekY();
        one10.chekX();one10.chekY();
        one11.chekX();one11.chekY();
        one12.chekX();one12.chekY();
        one13.chekX();one13.chekY();
        one14.chekX();one14.chekY();
        one15.chekX();one15.chekY();
        one16.chekX();one16.chekY();
        
        
        dd.repaint();
        
        
        
        
    }
    
    });
    
    public void update(Graphics g){
           paint(g);
    }
    
    
    public final class TestFrame extends JPanel
{
    @Override    
    public final void paintComponent(Graphics g) {
        //Graphics g = (Graphics) jPanel1.getGraphics();
        g.setColor(Color.BLUE);
        g.setColor(Color.YELLOW);
		
                
	g.fillOval(one1.oneX  , one1.oneY,20,20);
        g.fillOval(one2.oneX  , one2.oneY,20,20);
        g.fillOval(one3.oneX  , one3.oneY,20,20);
        g.fillOval(one4.oneX  , one4.oneY,20,20);
        g.fillOval(one5.oneX  , one5.oneY,20,20);
        g.fillOval(one6.oneX  , one6.oneY,20,20);
        g.fillOval(one7.oneX  , one7.oneY,20,20);
        g.fillOval(one8.oneX  , one8.oneY,20,20);
                
        g.fillOval(one9.oneX  , one9.oneY,20,20);
        g.fillOval(one10.oneX  , one10.oneY,20,20);
        g.fillOval(one11.oneX  , one11.oneY,20,20);
        g.fillOval(one12.oneX  , one12.oneY,20,20);
        g.fillOval(one13.oneX  , one13.oneY,20,20);
        g.fillOval(one14.oneX  , one14.oneY,20,20);
        g.fillOval(one15.oneX  , one15.oneY,20,20);
        g.fillOval(one16.oneX  , one16.oneY,20,20);
        
       
    }
    }
    
    
    
    
    
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                new NewJFrame().setVisible(true);
                
            }
        });
        
    }
    
    class Circle{
                boolean up = false;
                boolean down = true;
                boolean left = false;
                boolean right = true;
                int oneX = (int) (Math.random()*(450)) + 10;
                int oneY = (int) (Math.random()*(450)) + 10;
                
                public boolean getRandomBoolean() {
                    Random random = new Random();
                    return random.nextBoolean();
}
                
                public void chekX(){
                    if (this.oneX >= 500-30)
                    {
                        right = false;
                        left = getRandomBoolean();
                        
                    }
                    if (this.oneX <= 7)
                    {
                        right = getRandomBoolean();
                        left = false;
                    }
                    

                    if (left) this.oneX=oneX-(jSlider1.getValue()/99);
                    if (right) this.oneX=oneX+(jSlider1.getValue()/99);
                    jTextPane1.setText(Integer.toString(jSlider1.getValue()));
                }
                
                public void chekY(){
                    
                    if (this.oneY >= 350-60)
                    {
                        up = getRandomBoolean();
                        down = false;
                    }
                    if (this.oneY <= 7)
                    {
                        up = false;
                        down = getRandomBoolean();
                    }

                    
                    if (up) this.oneY=oneY-(jSlider1.getValue()/99);
                    if (down) this.oneY=oneY+(jSlider1.getValue()/99);
                    jTextPane1.setText(Integer.toString(jSlider1.getValue()));

                }
                
            }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables
}
